{
  Sources: [
    {
      FileName: GenerateCommandAttribute.g.cs,
      Source:
// <auto-generated/>
using System;

enum CommandCreationType
{
    Create,
    FromTask,
    FromObservable
}

[AttributeUsage(AttributeTargets.Method, AllowMultiple = false)]
sealed class GenerateCommandAttribute : Attribute
{
    public string? CommandName { get; set; }
    public string? CanExecuteProperty { get; set; }
    public CommandCreationType? CommandType { get; set; }
    public Type? ParameterType { get; set; }
}

    },
    {
      FileName: TestViewModel.ReactiveCommands.g.cs,
      Source:
// <auto-generated />
using ReactiveUI;
using System;
using System.Reactive;
using System.Reactive.Linq;
using System.Threading.Tasks;

public partial class TestViewModel 
{
    private ReactiveCommand<Unit, Unit> _saveDataAsyncCommand;

    public ReactiveCommand<Unit, Unit> SaveDataAsyncCommand => 
        _saveDataAsyncCommand;

    public TestViewModel()
    {
        _saveDataAsyncCommand = ReactiveCommand.CreateFromTask(() => SaveDataAsync());
    }
}

    }
  ],
  Diagnostics: null
}